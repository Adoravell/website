import{_ as e,c as a,o as r,X as o}from"./chunks/framework.47f65d32.js";const b=JSON.parse('{"title":"Зробити внесок","description":"Дізнайтеся, як допомогти у перекладі або в розробці додатку та парсерів.","frontmatter":{"title":"Зробити внесок","description":"Дізнайтеся, як допомогти у перекладі або в розробці додатку та парсерів.","footer":false,"translator":"CakesTwix"},"headers":[],"relativePath":"ua/dev/contribute/index.md","filePath":"ua/dev/contribute/index.md","lastUpdated":1722553081000,"breadcrumbs":[{"text":"Для розробників","items":[{"text":"Зробити внесок","link":"/ua/dev/contribute/"},{"text":"Бібліотека парсерів","link":"/ua/dev/parsers-library/"},{"text":"Сервер синхронізації","link":"/ua/dev/sync-server/"}]},{"text":"Зробити внесок","link":"/ua/dev/contribute/"}]}'),t={name:"ua/dev/contribute/index.md"},s=o('<h1 id="zrobiti-vnesok" tabindex="-1">Зробити внесок <a class="header-anchor" href="#zrobiti-vnesok" aria-label="Permalink to &quot;Зробити внесок&quot;">​</a></h1><p>Дізнайтеся, як допомогти у перекладі або в розробці додатку та парсерів.</p><h2 id="rekomendac-shchodo-vnesku-do" tabindex="-1">Рекомендації щодо внеску до додатку <a class="header-anchor" href="#rekomendac-shchodo-vnesku-do" aria-label="Permalink to &quot;Рекомендації щодо внеску до додатку&quot;">​</a></h2><ul><li>Якщо ви хочете виправити помилку або реалізувати нову функцію, про яку вже згадувалося в <a href="https://github.com/KotatsuApp/Kotatsu/issues" target="_blank" rel="noreferrer">GitHub Issues</a>, будь ласка, призначте це питання собі та/або прокоментуйте його.</li><li>Якщо вам потрібно впровадити нову функцію, будь ласка, відкрийте тему або обговорення щодо неї, щоб переконатися, що вона буде прийнята.</li><li>Переклади повинні контролюватися за допомогою платформи <a href="https://hosted.weblate.org/engage/kotatsu/" target="_blank" rel="noreferrer">Weblate</a>.</li><li>Якщо ви хочете додати нове джерело манґи, зверніться до <a href="https://github.com/KotatsuApp/kotatsu-parsers" target="_blank" rel="noreferrer">репозиторію парсерів</a>.</li></ul><p>Рефакторинг або деякі покращення інтерфейсу також можуть бути прийняті, однак, будь ласка, дотримуйтесь наступних принципів:</p><ul><li>Швидкість роботи має значення. У випадку вибору між красою вихідного коду та швидкістю роботи, пріоритетом має бути швидкість роботи додатка.</li><li>Будь ласка, не змінюйте README.md та інші *.md (за винятком усунення помилок).</li><li>Уникайте додавання нових залежностей без необхідності. Розмір APK важливий.</li></ul><h2 id="nastanovi-shchodo-vnesku-do-repozitoryu" tabindex="-1">Настанови щодо внеску до репозиторію парсерів <a class="header-anchor" href="#nastanovi-shchodo-vnesku-do-repozitoryu" aria-label="Permalink to &quot;Настанови щодо внеску до репозиторію парсерів&quot;">​</a></h2><p>Нижче наведено настанови щодо створення парсеру Kotatsu. Дякуємо, що знайшли час для участі!</p><h3 id="peredumovi-dlya-uchast" tabindex="-1">Передумови для участі <a class="header-anchor" href="#peredumovi-dlya-uchast" aria-label="Permalink to &quot;Передумови для участі&quot;">​</a></h3><p>Перед початком зауважте, що вміння користуватися наведеними нижче технологіями є <strong>необхідним</strong>.</p><ul><li>Базові знання <a href="https://developer.android.com/" target="_blank" rel="noreferrer">розробки під Android</a></li><li><a href="https://kotlinlang.org/" target="_blank" rel="noreferrer">Kotlin</a></li><li>Web scraping (<a href="https://jsoup.org/" target="_blank" rel="noreferrer">JSoup</a>) або JSON API</li></ul><h4 id="nstrumenti" tabindex="-1">Інструменти <a class="header-anchor" href="#nstrumenti" aria-label="Permalink to &quot;Інструменти&quot;">​</a></h4><ul><li><a href="https://developer.android.com/studio" target="_blank" rel="noreferrer">Android Studio</a></li><li><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noreferrer">IntelliJ IDEA</a> (Community edition є достатнім для розробки)</li><li>Android-пристрій (або емулятор)</li></ul><p>Парсери Kotatsu не є частиною додатку для Android, але ви можете легко розробити і протестувати його безпосередньо в проекті додатку для Android і перемістити його до проекту бібліотеки, коли це буде готове.</p><h4 id="persh-nzh-pochati" tabindex="-1">Перш ніж почати <a class="header-anchor" href="#persh-nzh-pochati" aria-label="Permalink to &quot;Перш ніж почати&quot;">​</a></h4><p>Спочатку подивіться на структуру проекту <code>kotatsu-parsers</code>. Кожен парсер є окремим класом, який розширює клас <code>MangaParser</code> і має анотацію <code>MangaSourceParser</code>. Також зверніть увагу на розширення в пакеті <code>util</code>. Наприклад, розширення з файлу <code>Jsoup</code> слід використовувати замість існуючих функцій JSoup, тому що вони мають кращу підтримку nullability значень та покращені повідомлення про помилки.</p><h3 id="napisannya-parseru" tabindex="-1">Написання парсеру <a class="header-anchor" href="#napisannya-parseru" aria-label="Permalink to &quot;Написання парсеру&quot;">​</a></h3><p>Отже, ви хочете створити парсер, який надаватиме доступ до манґи з веб-сайту. По-перше, вам слід дослідити веб-сайт на предмет наявності API. Якщо він не містить жодної документації про API, то <a href="https://firefox-source-docs.mozilla.org/devtools-user/" target="_blank" rel="noreferrer">дослідіть мережеві запити</a>: деякі сайти використовують ajax.</p><ul><li><a href="https://github.com/KotatsuApp/kotatsu-parsers/blob/master/src/main/kotlin/org/koitharu/kotatsu/parsers/site/ru/DesuMeParser.kt" target="_blank" rel="noreferrer">Наприклад</a> використання Json API.</li><li><a href="https://github.com/KotatsuApp/kotatsu-parsers/blob/master/src/main/kotlin/org/koitharu/kotatsu/parsers/site/be/AnibelParser.kt" target="_blank" rel="noreferrer">Наприклад</a> використання API GraphQL</li><li><a href="https://github.com/KotatsuApp/kotatsu-parsers/blob/master/src/main/kotlin/org/koitharu/kotatsu/parsers/site/en/MangaTownParser.kt" target="_blank" rel="noreferrer">Example</a> чистого парсингу HTML.</li></ul><p>Якщо сайт побудований на якомусь движку, раціонально використовувати загальний для нього базовий клас (наприклад, Madara wordpress тема і клас <code>MadaraParser</code>)</p><h4 id="skelet-klasu-parseru" tabindex="-1">Скелет класу парсеру <a class="header-anchor" href="#skelet-klasu-parseru" aria-label="Permalink to &quot;Скелет класу парсеру&quot;">​</a></h4><p>Клас Parser повинен мати рівно один первинний параметр конструктора типу <code>MangaLoaderContext</code> і мати анотацію <code>MangaSourceParser</code> яка містить внутрішню назву, заголовок та мову джерела манґи.</p><p>Всі функції класу <code>MangaParser</code> задокументовані. Зверніть увагу на деякі особливості:</p><ul><li>Ніколи не задавайте домен hardcod&#39;ом. Вкажіть домен за замовчуванням у полі <code>configKeyDomain</code> і отримайте актуальний домен за допомогою <code>getDomain()</code>.</li><li>Всі ідентифікатори повинні бути унікальними і не залежати від домену. Використовуйте функцію <code>generateUid</code> з відносним посиланням або внутрішнім ідентифікатором, який є унікальним у всьому джерелі манґи.</li><li>Параметр `sortOrders не повинен бути порожнім. Якщо ваше джерело не підтримує сортування, вкажіть одне найбільш релевантне значення.</li><li>Якщо ви не можете отримати прямі посилання на зображення сторінок у методі <code>getPages</code>, ви можете використати проміжний адрес як <code>Page.url</code> і отримати пряме посилання у функції <code>getPageUrl</code>.</li><li>Ви можете використовувати <em>asserts</em> для перевірки деяких необов&#39;язкових полів. Наприклад. Поле <code>Manga.author</code> не є обов&#39;язковим, але якщо ваше джерело містить таку інформацію, додайте <code>assert(it != null)</code>. Це не вплине на роботу додатку, але допоможе знайти проблеми під час модульного тестування.</li><li>Якщо на сайті (або його api) для пагінації використовуються сторінки, а не зміщення, вам слід використовувати <code>PagedMangaParser</code> замість <code>MangaParser</code>.</li><li>Ваш парсер може також реалізувати інтерфейс <code>Interceptor</code> для додаткової маніпуляції з усіма мережевими запитами та/або відповідями, включаючи завантаження зображень.</li></ul><h3 id="proces-rozrobki" tabindex="-1">Процес розробки <a class="header-anchor" href="#proces-rozrobki" aria-label="Permalink to &quot;Процес розробки&quot;">​</a></h3><p>Під час розробки рекомендується (але не обов&#39;язково) писати його безпосередньо у проекті програми Kotatsu для Android. Ви можете використовувати клас <code>core.parser.DummyParser</code> як пісочницю. Манґа <code>Dummy</code> доступний у debug збірці Kotatsu.</p><p>Після того, як парсер буде готовий, ви можете перемістити ваш код у проект бібліотеки <code>kotatsu-parsers</code> у пакеті <code>site</code> і створити Pull Request.</p><h4 id="testuvannya" tabindex="-1">Тестування <a class="header-anchor" href="#testuvannya" aria-label="Permalink to &quot;Тестування&quot;">​</a></h4><p>Перед відправкою PR рекомендується провести юніт-тести.</p><ul><li>Тимчасово змініть клас анотації <code>MangaSources</code>: вкажіть ім&#39;я вашого(их) парсеру(ів) та змініть режим на <code>EnumSource.Mode.INCLUDE</code>.</li><li>Запустіть `MangaParserTest</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#61AFEF;">gradlew</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">:test</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--tests</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;org.koitharu.kotatsu.parsers.MangaParserTest&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">gradlew</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:test</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--tests</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;org.koitharu.kotatsu.parsers.MangaParserTest&quot;</span></span></code></pre></div><ul><li>За бажанням ви можете запустити gradle-завдання <code>generateTestsReport</code>, щоб отримати досить читабельний html-звіт за результатами тестування.</li></ul><h2 id="dopomoga" tabindex="-1">Допомога <a class="header-anchor" href="#dopomoga" aria-label="Permalink to &quot;Допомога&quot;">​</a></h2><p>Якщо вам потрібна допомога або у вас є запитання, зверніться до спільноти в нашому <a href="https://t.me/kotatsuapp" target="_blank" rel="noreferrer">Телеграм-чаті</a> або на <a href="https://discord.gg/NNJ5RgVBC5" target="_blank" rel="noreferrer">Discord-сервері</a>.</p>',34),l=[s];function n(i,d,c,p,u,h){return r(),a("div",null,l)}const g=e(t,[["render",n]]);export{b as __pageData,g as default};
